% Data - array of Datalex humbers, mean subtracted
% PTile - which percentile (number from 1-100)
% Window - window length in seconds
% Rate - sampling rate
function Out = SlidingPercentileVelocity(Data, VelWindow, VelOverlap, Rate, quantile)
% I=[3051, 3654, 994, 531, 922, 1434, 1176, 3799, 211, 2427, 668, 3434, 687, 2057, 4093, 1456, 193, 875, 1630, 1367, 941, 3834, 2798, 3940, 1794, 3851, 24, 2500, 3281, 955, 3819, 3126, 3385, 2349, 3246, 1348, 916, 1280, 2394, 3399, 1190, 1649, 3531, 2518, 4059, 835, 3388, 2768, 1020, 1949, 1635, 2455, 3279, 431, 3364, 3445, 1452, 1762, 2344, 2870, 3041, 3104, 1594, 1758, 3917, 2347, 3480, 1132, 2549, 2410, 3946, 352, 2050, 2136, 370, 3705, 3622, 1798, 3202, 608, 2539, 1068, 1825, 3457, 804, 1245, 1980, 1384, 3270, 4044, 652, 971, 2876, 1538, 3988, 3982, 2636, 3523, 1646, 2588, 4035, 2292, 3824, 2950, 1983, 2617, 3635, 814, 1620, 4063, 1648, 2699, 3692, 4077, 2675, 445, 148, 2532, 2323, 3940, 3056, 2714, 2143, 1065, 3940, 2213, 124, 2852, 2129, 242, 3645, 1353, 941, 467, 1274, 936, 2670, 271, 1128, 1155, 3604, 1820, 3096, 2471, 3208, 467, 4008, 3476, 208, 1910, 1334, 2581, 944, 2375, 2470, 2457, 1837, 146, 2105, 1670, 443, 1884, 1847, 2257, 3299, 2870, 3572, 214, 900, 1883, 3926, 3236, 1851, 1366, 242, 3035, 2076, 819, 1750, 691, 3079, 1509, 3857, 71, 3395, 2566, 2207, 2664, 2976, 387, 3594, 59, 1206, 737, 3794, 280, 2380, 2610, 2667, 3541, 230, 3346, 2166, 2844, 870, 2225, 2877, 3917, 1821, 350, 235, 2578, 3261, 2831, 1415, 3878, 2131, 3906, 302, 848, 3174, 3744, 3205, 1211, 622, 3473, 3214, 1110, 933, 1315, 3398, 3367, 2337, 2342, 1172, 2863, 3261, 1809, 1828, 1907, 1143, 2766, 3701, 3721, 3060, 1067, 2825, 540, 506, 782, 597, 2396, 301, 3368, 2961, 3792];
% Q=[2018, 2682, 3646, 2206, 1156, 3997, 150, 1336, 3985, 1495, 1266, 496, 3751, 555, 1361, 3676, 2047, 2520, 2388, 2860, 121, 2162, 132, 3388, 1393, 3468, 1008, 2382, 3840, 196, 222, 85, 2791, 2452, 467, 3261, 2531, 288, 284, 557, 3231, 379, 975, 998, 430, 3515, 2860, 3005, 2664, 2115, 1337, 2710, 482, 606, 81, 3949, 3974, 508, 1915, 2690, 1189, 3090, 2286, 1752, 1095, 3087, 3679, 2983, 1666, 3843, 1046, 2184, 3910, 1097, 1025, 3799, 281, 1227, 2423, 833, 2604, 3270, 2055, 2666, 3260, 956, 2461, 461, 2113, 3431, 3771, 2041, 1137, 2673, 3757, 2088, 3990, 808, 456, 1218, 1624, 1723, 1276, 2842, 377, 1647, 1209, 1256, 433, 2432, 1158, 636, 3, 1162, 2256, 3567, 174, 3705, 537, 3415, 3278, 3759, 563, 2067, 1659, 711, 2356, 2483, 879, 2130, 4051, 2007, 2846, 1685, 143, 1200, 3282, 1419, 342, 2093, 1503, 3029, 2149, 3295, 3346, 776, 507, 3362, 2613, 67, 3669, 2111, 2230, 2484, 3114, 3503, 1568, 347, 3006, 1360, 3439, 1523, 3392, 723, 531, 3604, 181, 2813, 3005, 1791, 1556, 4012, 1634, 1803, 643, 1336, 1287, 3663, 1012, 1273, 1675, 2900, 589, 3569, 341, 1891, 125, 3085, 2867, 879, 2785, 2283, 3484, 2288, 3693, 1718, 1467, 2003, 1049, 3805, 1912, 1041, 1766, 2877, 1648, 745, 3507, 2393, 1530, 908, 897, 2139, 1775, 3036, 289, 3470, 2785, 560, 3516, 819, 2488, 2224, 665, 24, 3160, 3132, 1725, 233, 2399, 714, 2984, 2188, 1037, 3756, 3105, 3633, 282, 752, 3019, 2854, 3182, 2056, 1743, 2504, 3505, 2747, 2145, 1224, 2883, 1563, 2325, 3636, 3452, 3681, 3846, 3340];
% I=I-2048;
% Q=Q-2048;
% Data=I+i*Q;
% VelWindow=3;
% VelOverlap=0.8;

% calculate range in meters
% lambda = 3e8/5.8e9;
% Range = UnWrap(angle(Data)/2/pi, -0.5, 0.5)* lambda/2;


Range = UnWrap(angle(Data)/2/pi, -0.5, 0.5)* 2*3.1415*4096;  % res * 1.0049e-06 is the correct meters


WindowSamples = VelWindow*Rate;
OverlapSamples = VelOverlap*WindowSamples;
N = length(Range);

k = 1;
phaseDiff = [];
% find max-min over each window
for j = 1:(WindowSamples-OverlapSamples):(N + 1 - WindowSamples)
    %phaseDiff(k) = max(Range(j:j+WindowSamples-1)) - min(Range(j:j+WindowSamples-1));
    if j==1
        phaseDiff(k) = abs(WindowSamples-1);
    else
        phaseDiff(k) = abs(Range(j+WindowSamples-1) - Range(j-1));
    end
%         currphase = Range(startIndex:startIndex+63)
%         maxPhaseInStep = max(Range(startIndex:startIndex+63))
    k = k + 1;
end

phaseDiff = sort(phaseDiff);   
%disp(phaseDiff);
Out = phaseDiff(ceil(quantile*length(phaseDiff)));
